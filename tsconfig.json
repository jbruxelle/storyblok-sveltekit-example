{
	"compilerOptions": {
		"moduleResolution": "node",
		"module": "esnext",
		"lib": ["esnext", "DOM"],
		"target": "esnext",
		/**
			svelte-preprocess cannot figure out whether you have a value or a type, so tell TypeScript
			to enforce using \`import type\` instead of \`import\` for Types.
			*/
		"importsNotUsedAsValues": "error",
		"isolatedModules": true,
		"resolveJsonModule": true,
		/**
			To have warnings/errors of the Svelte compiler at the correct position,
			enable source maps by default.
			*/
		"sourceMap": true,
		"esModuleInterop": true,
		"skipLibCheck": true,
		"forceConsistentCasingInFileNames": true,
		"baseUrl": ".",
		"allowJs": true,
		"checkJs": true,
		"paths": {
			"$lib": ["src/lib"],
			"$lib/*": ["src/lib/*"],
			"$api/*": ["src/routes/api/*"],
			"$stores": ["src/lib/stores"],
			"$stores/*": ["src/lib/stores/*"],
			"$utils/*": ["src/lib/utils/*"],
			"$components/*": ["src/lib/components/*"],
			"$graphql/*": ["src/lib/graphql/*"],
			"$environment/*": ["src/lib/environment/*"]
		}
	},
	"include": ["src/**/*.d.ts", "src/**/*.js", "src/**/*.ts", "src/**/*.svelte"],
	"exclude": ["node_modules/*", ".svelte-kit/*"],
	"extends": "@tsconfig/svelte/tsconfig.json"
}
